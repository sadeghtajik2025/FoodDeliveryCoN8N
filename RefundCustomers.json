{
  "name": "RefundCustomers",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        -20
      ],
      "id": "34554d48-706b-4f0e-afec-d9fb63ab89af",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM orders WHERE order_status = 'Cancelled';",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        220,
        -20
      ],
      "id": "cc9008d5-3654-4356-aff9-0b802d05dc20",
      "name": "Postgres",
      "credentials": {
        "postgres": {
          "id": "sWriQ11NT5ETZ8wo",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAndWait",
        "fromEmail": "ms@tajik.co",
        "toEmail": "finance@fooddelivery.com",
        "subject": "List of cancelled orders pending",
        "message": "Dear finance team\nPlease see attached list of cancelled orders since last execution of the automation. \nPlease confirm if the agent is authorised to proceed with the refunds.\n\nRegards\nAutomation",
        "approvalOptions": {
          "values": {
            "approvalType": "double"
          }
        },
        "options": {
          "limitWaitTime": {
            "values": {
              "resumeUnit": "days"
            }
          }
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        440,
        -20
      ],
      "id": "9a69dc95-9afb-4bde-994f-ffdf9dd6a97c",
      "name": "Send Email",
      "webhookId": "ea410a0a-e970-4fa1-8a24-630b0b8c4296",
      "alwaysOutputData": true,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "customer_id"
          ],
          "schema": [
            {
              "id": "customer_id",
              "displayName": "customer_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "customer_full_name",
              "displayName": "customer_full_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customer_address",
              "displayName": "customer_address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date_of_birth",
              "displayName": "date_of_birth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "gender",
              "displayName": "gender",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Wallet_Balance_AED",
              "displayName": "Wallet_Balance_AED",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1540,
        -120
      ],
      "id": "dd32ddf1-eb59-4f00-819e-73741ccd587f",
      "name": "Postgres1",
      "credentials": {
        "postgres": {
          "id": "sWriQ11NT5ETZ8wo",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d84cd8ed-0225-4f19-8af5-ef7ebd6c8fb9",
              "name": "customer_Id",
              "value": "",
              "type": "string"
            },
            {
              "id": "a11e3a22-aaba-47c1-8917-a401aa85290a",
              "name": "order_id",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        660,
        -20
      ],
      "id": "78166e51-d48d-4f2a-b208-9a5a874a8d8d",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "order_payment",
                    "rightValue": "AppWallet",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "ebc9b86e-6918-48bc-bfa1-3320bdf924c8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Refund to app wallet"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8fa13f4c-4ffe-4e5e-a1da-213cdf8e9dec",
                    "leftValue": "order_payment",
                    "rightValue": "Card",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Refund to credit card API"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        880,
        -20
      ],
      "id": "1fe4cbb7-1176-46bb-b1fa-538942910401",
      "name": "Switch"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "customer_id"
          ],
          "schema": [
            {
              "id": "customer_id",
              "displayName": "customer_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "customer_full_name",
              "displayName": "customer_full_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customer_address",
              "displayName": "customer_address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date_of_birth",
              "displayName": "date_of_birth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "gender",
              "displayName": "gender",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Wallet_Balance_AED",
              "displayName": "Wallet_Balance_AED",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1100,
        80
      ],
      "id": "6a60171a-f538-4031-a504-2a5adac0e9c3",
      "name": "Postgres2",
      "credentials": {
        "postgres": {
          "id": "sWriQ11NT5ETZ8wo",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://www.cardapiurl.com",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1320,
        80
      ],
      "id": "fc9fd2cd-c345-4f70-be90-3e06e7d7cb96",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b13a55b1-1158-45dc-99e2-1407be08cc02",
              "leftValue": "CardAPIReturnedValue",
              "rightValue": "Approval",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1540,
        80
      ],
      "id": "678d5be0-7350-4149-9ce5-5091a0d8347a",
      "name": "If"
    },
    {
      "parameters": {
        "operation": "update",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "customers",
          "mode": "list",
          "cachedResultName": "customers"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "customer_id"
          ],
          "schema": [
            {
              "id": "customer_id",
              "displayName": "customer_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "customer_full_name",
              "displayName": "customer_full_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "customer_address",
              "displayName": "customer_address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "date_of_birth",
              "displayName": "date_of_birth",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "gender",
              "displayName": "gender",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Wallet_Balance_AED",
              "displayName": "Wallet_Balance_AED",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        1760,
        -20
      ],
      "id": "80a2700d-d828-4a8a-9536-5c9d25a9bebf",
      "name": "Postgres3",
      "credentials": {
        "postgres": {
          "id": "sWriQ11NT5ETZ8wo",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "Execute manually or on frequent intervals"
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -100,
        -120
      ],
      "id": "8ed8c9fd-5c81-4a23-8946-1dd1ac6c1afa",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Read all orders where the status is cancelled",
        "width": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        160,
        -120
      ],
      "id": "c253f1c5-5437-43cc-b72f-97077492c2e3",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "Send a list of cancelled orders since last execution to finance team for approvals.",
        "width": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        380,
        -120
      ],
      "id": "dacd1c97-2ad0-471d-b23a-a67043abe750",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "Check to see if refund is to be done through API of credit card or in App Wallet",
        "width": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        820,
        -120
      ],
      "id": "c53457ec-346c-437e-bc92-81290d038645",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "\n\nUse the credit card company API to send refund requests. if not successful retry again.  ",
        "height": 120,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1340,
        260
      ],
      "id": "c3ebccdc-0691-4b63-8be7-8b2b9264cabb",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "Update the app DB accordingly ",
        "height": 120,
        "width": 320
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1740,
        -120
      ],
      "id": "268fda0b-5c0f-4788-8110-3be3ed931406",
      "name": "Sticky Note5"
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "3c540a91-67ca-483c-b803-09bf49941eb5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "ab2a2d17679f75d71b671dc836a3df20dae28462dc0ef6bc44bd01ca142936b0"
  },
  "id": "ALNXIfzn0JSME3sJ",
  "tags": []
}